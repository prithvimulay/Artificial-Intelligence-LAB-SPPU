import numpy as np
import nltk
import string
import random

f = open('/content/Trade.txt','r',errors='ignore')
raw_doc = f.read()

raw_doc = raw_doc.lower()
nltk.download('punkt')
nltk.download('wordnet')
nltk.download('omw-1.4')
sentence_tokens = nltk.sent_tokenize(raw_doc)
word_tokens = nltk.word_tokenize(raw_doc)

sentence_tokens[:5]
word_tokens[:5]

lemmer = nltk.stem.WordNetLemmatizer()
def LemTokens(tokens):
  return [lemmer.lemmatize(token) for token in tokens]
remove_punc_dict = str.maketrans('', '', string.punctuation)

def LemNormalize(text):
  # Lowercase and remove punctuation
    text_no_punctuation = text.lower().translate(remove_punc_dict)
    # Tokenize
    tokens = nltk.word_tokenize(text_no_punctuation)
    # Lemmatize
    return LemTokens(tokens)
     

greet_inputs = ('hi','hey','whatsup','how are you?','hello')
greet_responses = ('Hi','Hey','Hey there!','There there!!')
def greet(sentence):
  for word in sentence.split():
    if word.lower() in greet_inputs:
      return random.choice(greet_responses)
     

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
     

def response(user_response):
  robo1_response = ''
  TfidfVec = TfidfVectorizer(tokenizer = LemNormalize, stop_words = 'english')
  tfidf = TfidfVec.fit_transform(sentence_tokens)
  vals = cosine_similarity(tfidf[-1],tfidf)
  idx = vals.argsort()[0][-2]
  flat = vals.flatten()
  flat.sort()
  req_tfidf = flat[-2]
  if (req_tfidf == 0):
    robo1_response = robo1_response + 'I am sorry. Unable to understand you!'
    return robo1_response
  else:
    robo1_response = robo1_response + sentence_tokens[idx]
    return robo1_response
  flag = True
print('Welcome to my first every chatbot. I have some knowledge regarding trading. Feel free to chat. To quite type bye')
while flag == True:
  user_response = input()
  user_response = user_response.lower()
  if ( user_response != 'bye'):
    if ( user_response == 'Thankyou' or user_response == 'Thanks'):
      flag = False
      print("Bot: Your Welcome.")
    else:
      if(greet(user_response) != None):
        print("Bot: ",greet(user_response))
      else:
        sentence_tokens.append(user_response)
        word_tokens = word_tokens + nltk.word_tokenize(user_response)
        final_words = list(set(word_tokens))
        print("Bot: ",end='')
        print(response(user_response))
        sentence_tokens.remove(user_response)
  else:
      flag=False
      print("Bot: Goodbye!")
